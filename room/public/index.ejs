<style>
    
    body {
        font-family: sans-serif
    }

    #container {
        top:0;
        left:0;
        right:0;
        bottom:0;
        position:fixed
    }
    
    section#main {
        display: none;
    }
    
    #callArea { 
        width:100px;
        height:50px;
        background: rgba(0,0,0,.5);
        top: 0;
        line-height:36pt;
        right: 0;
        position: fixed;
        text-align: center;
        border-radius: 0 0 0 20px;
        display: none;
        z-index: 99999999999;
    }
    #callArea a {
        color: white;
    }
    
    #createAndJoin {
        top: 0;
        left: 0;
        width:100%;
        height: 100%;
        position: fixed;
        z-index: 99999;
    }
    
    #chatInputArea {
        width:100%;
        height:40px;
        padding-top:10px;
        bottom:0;
        left:0;
        right:0;
        position:fixed;
        z-index:9999;
        background: rgba( 255,255,255, .5 )
    }
    
    #messages {
        bottom: 50px;
        left:0;
        position:fixed;
        background:rgba(255,255,255,.5);
        font-size: 12px;
        padding: 10px;
    }
    .message {
        padding-bottom:10px;
    }
    
    #roomMember {
        top: 0;
        right: 0;
        position: fixed;
        z-index:999999
    }
    
    #peerVideo {
        top: 50%;
        left:50%;
        margin: -160px 0 0 -240px;
        position:fixed;
        z-index:999999999;
        display:none
    }

</style>

<script src="/socket.io/socket.io.js"></script>
<script src="resources/js/preload.js"></script>

<script type="text/javascript" src="https://skyway.io/dist/v2/0.3/peer.js"></script>

<div id="container"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.js"></script>
<script src="resources/js/three.min.js"></script>

<script src="resources/js/jquery-3.1.1.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCvw4kMawbZSiXoHFDiDs2zxBbblWE7_cs"></script>
<script src="resources/js/location.js"></script>
<script src="resources/js/tile.js"></script>
<script src="resources/js/main.js"></script>

<script src="resources/js/7NgOx.js"></script>


<div style="display: none">
    <canvas id="textureBase"></canvas>
    <canvas id="texture"></canvas>
</div>

<div id="createAndJoin">
    <textarea id="roomId"></textarea>
    <textarea id="userName"></textarea>
    <a href="javascript: void(0)" id="createRoomBtn">CreateRoomBtn</a>
    <a href="javascript: void(0)" id="joinBtn">JoinBtn</a>
</div>

<section id="main">

    <div id="callArea">
        <a href="javascript: void(0)" id="callEnd">Close</a>
    </div>

    <div id="roomMember"></div>

    <video id="peerVideo" style="width: 480px;height: 320px" autoplay></video>

    <div id="chatField">
        <div id="messages"></div>
        <div id="chatInputArea">
            <textarea id="chatInput"></textarea>
            <a href="javascript: void(0)" onclick="sendMessage()">Send</a>
            <a href="javascript: void(0)" onclick="setPin()" id="mylocate">Pin</a>
            <a href="javascript: void(0)" onclick="emergency()" id="emergency">emergency</a>
        </div>
    </div>

</section>

<script type="text/javascript" src="resources/js/videochat.js"></script>
<script>
    
    function setPin(){
        navigator.geolocation.getCurrentPosition( function( position ){

            var data = position.coords

            var lat = data.latitude,
                lng = data.longitude

            createHuman( { lat: lat, lng: lng } )

        }, function( error ){

            reject( error )

        }, {
            enableHighAccuracy: false,
            timeout           : 8000,
            maximumAge        : 2000,
        } )
        document.getElementById( 'mylocate' ).style.display = 'none'
    }
    
    socket.on( 'emergency', function( position ){
        console.log( position )
        createEmergency( position.lat, position.lng )
    } )
    
    function emergency(){
        navigator.geolocation.getCurrentPosition( function( position ){

            var data = position.coords

            var lat = data.latitude,
                lng = data.longitude

            socket.emit( 'emergency', {
                lat: lat,
                lng: lng
            } )

        }, function( error ){

            reject( error )

        }, {
            enableHighAccuracy: false,
            timeout           : 8000,
            maximumAge        : 2000,
        } )
    }
    
    var roomMember = document.getElementById( 'roomMember' ),
        messages   = document.getElementById( 'messages' ),
        chatInput  = document.getElementById( 'chatInput' )
    
    var isMain = false
    
    socket.on( 'joined', function( members ){
        socket.emit( 'getWeather', {} )
        roomMember.innerHTML = ''
        console.log( members )
        if( !isMain ){
            main( members.position )
            isMain = true
        } else createHuman( user.lat, user.lng )
        memberPosition = members.memberPosition
        members = members.member
        for( var i=0; i<members.length; i++ ){
            roomMember.innerHTML += '<div class="member">'
            + members[i]
            + ' - <a href="javascript: void(0)" onclick="callRequest(\'' + members[i] + '\')">Call</a>'
            + '</div>'
        }
        user = memberPosition[memberPosition.length-1]
        document.getElementById( 'main' ).style.display = 'block'
    } )
    
    function callRequest( name ){
        socket.emit( 'callRequest', {
            target: name,
            peer: peer.id
        } )
    }
    
    function sendMessage(){
        var mes = chatInput.value
        socket.emit( 'message', mes )
    }
    
    socket.on( 'weather', function( data ){
        messages.innerHTML += '<div class="message">'
            + '<div class="messageUserName">System@Weather</div>'
            + '<div class="content">'
            + data.weather[0].description + '<br>'
            + 'Wind : ' + data.wind.speed + '(' + data.wind.deg + 'deg)<br>'
            + 'Temp : ' + data.main.temp + '<br>Humidity : '+ data.main.humidity
            + '</div>' 
    } )
    
    socket.on( 'message', function( message ){
        messages.innerHTML += '<div class="message">'
        + '<div class="messageUserName">' + message.name + '@' + message.from + '</div>'
        + '<div class="content">' + message.message + '</div>' 
    } )
    
    socket.on( 'callRequest', function( config ){
        if( confirm( 'Receive ?' ) ){
           document.getElementById( 'callArea' ).style.display = 'block'
           callStart( config.peer )
        } else socket.emit( 'cancelledCallRequest', { target: config.name } )
    } )
    
    socket.on( 'cancelledCallRequest', function( e ){
        console.log( e )
    } )
    
    socket.on( 'receivedCallRequest', function( e ){
        console.log( e )
        document.getElementById( 'callArea' ).style.display = 'block'
    } )
    
    var getMyLocation = new Promise( function( resolve, reject ){

        navigator.geolocation.getCurrentPosition( function( position ){

            var data = position.coords

            var lat = data.latitude,
                lng = data.longitude

            resolve( { lat: lat, lng: lng } )

        }, function( error ){

            reject( error )

        }, {
            enableHighAccuracy: false,
            timeout           : 8000,
            maximumAge        : 2000,
        } )

    } )
    
    /*
    socket.emit( 'createRoom', function(){
        roomId: 'MoriHack'
    } )
    socket.emit( 'join', {
        name: 'MareiKikukawa',
        roomId: 'MoriHack'
    } )
    
    socket.emit( 'callRequest', {
        name: 'MareiKikukawa',
        peer: peer.id
    } )
    */
    
</script>

<script>
    function hideCreateAndJoin(){
        document.getElementById( 'createAndJoin' ).style.display = 'none'
    }
    
    var inputRoomId   = document.getElementById( 'roomId' ),
        userName      = document.getElementById( 'userName' ),
        createRoomBtn = document.getElementById( 'createRoomBtn' ),
        joinBtn       = document.getElementById( 'joinBtn' )
    
    createRoomBtn.addEventListener( 'click', function(){
        if( inputRoomId.value ){
            getMyLocation.then( function( position ){
                socket.emit( 'createRoom', {
                    roomId: inputRoomId.value,
                    position: {
                        lat: position.lat,
                        lng: position.lng
                    }
                } )
                socket.emit( 'join', {
                    name: userName.value,
                    roomId: inputRoomId.value,
                    position: position
                } )
                hideCreateAndJoin()
            } )
        }
    } )
    
    joinBtn.addEventListener( 'click', function(){
        if( inputRoomId.value ){
            getMyLocation.then( function( position ){
                socket.emit( 'join', {
                    name: userName.value,
                    roomId: inputRoomId.value,
                    position: position
                } )
                hideCreateAndJoin()
            } )
        }
    } )
    
    var callEndBtn     = document.getElementById( 'callEnd' )
    
    callEndBtn.addEventListener( 'click', function(){
        callEnd()
    } )
    
</script>